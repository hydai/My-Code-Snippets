# Include library
snippet inc
	#include <${1:iostream}>
	${2}
snippet incc
	#include "${1:header}"
	${2}
# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}

# std::map
snippet map
	std::map<${1:key}, ${2:value}> ${3};

# std::vector
snippet vector
	std::vector<${1:char}> ${2};

# std::pair
snippet pair
	std::pair<${1:string}, ${2:int}> ${3};

# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`} {
		${2}
	} /* namespace $1 */

# Class
snippet class
	class ${1:`Filename('$1', 'name')`} 
	{
	public:
		$1(${2});
		~$1();

	private:
		${3:/* data */}
	};
# member function implementation
snippet mfun
	${4:void} ${1:`Filename('$1', 'ClassName')`}::${2:memberFunction}(${3}) {
		${5:/* code */}
	}
# namespace
snippet ns
	namespace ${1:`Filename('', 'my')`} {
		${2}
	} /* namespace $1 */
##
## Input/Output
# std::cout
snippet cout
	std::cout << ${1} << std::endl;${2}
# std::cin
snippet cin
	std::cin >> ${1};${2}
##
## Iteration
# for i 
snippet fori
	for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {
		${4:/* code */}
	}${5}

# foreach
snippet fore
	for (${1:auto} ${2:i} : ${3:container}) {
		${4:/* code */}
	}${5}
# iterator
snippet iter
	for (${1:std::vector}<${2:type}>::${3:const_iterator} ${4:i} = ${5:container}.begin(); $4 != $5.end(); ++$4) {
		${6}
	}${7}

# member function implementations
snippet mfun
	${4:void} ${1:`Filename('$1', 'ClassName')`}::${2:memberFunction}(${3}) {
		${5:return};
	}
snippet scout
	std::cout << ${1} << std::endl;
snippet spr
	std::printf(${1:"%s\n"});
snippet cout
	cout << ${1} << endl;
snippet scin
	std::cin >> ${1};
snippet cin
	cin >> ${1};
snippet ustd
	using namespace std;
